version: '3'

services:
  api:
    container_name: car-api
    build: .
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      KEYCLOAK_REAM: ${KEYCLOAK_REAM}
      KEYCLOAK_HOST: ${KEYCLOAK_HOST}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - car-network

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d car_api -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 10
    restart: always
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - car-network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.0.7
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8443
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8443:8080"
    command:
      - start-dev
    networks:
      - car-network

networks:
  car-network:
    driver: bridge